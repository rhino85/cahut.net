{"url":"/dev/J/23-10-20","markdown":"## [/](/) [dev/](/dev/) [J/](/dev/J/)\n# 23/10/20\n[précédent](06-09-20) / [suivant](31-10-20)\n\nrebosser, <br>il faut que je rebosse, adele me l'a dit doucement au coin de l'oreille et elle a raison\n\nil faut que j'aboutisse à une nouvelle version stable, avec :\n  * file-upload (pic + pdf)\n  * integration youtube\n  * liens qui ne depassent pas de l'écran sur mobile\n  * un système pour être au courant de la version (ex un fichier txt dans public)\n\n***\n\nces derniers mois j'ai bossé plusieurs fois sur la version dev, sans toujours prendre note des experimentations, alors je vais commencer par faire un état des lieux...\n1. dans la version dev, j'ai enlevé dompurify, ça permet de mettre des videos youtube, des iframes\n> this.html = marked(this.markdown); \n2. j'ai commencé à bosser sur le file-upload (rajout d'un form sur le front, rien dans le back, (à re-veifier)) https://arthur.cahut.net/dev/file-upload\n\nc'est tout a priori\n\nje vais garder la non-purification du dom\n\net finir le file upload (utiliser simplement https://www.npmjs.com/package/express-fileupload)<br>\n\nreflexion... comment supprimer une image mise en ligne???\n<br> idée : pour le moment osef?, risque : mettre une image par erreur à une url qui n'était pas censé en heberger une<br>\npiste : heberger toutes les images dans un seul dossier, ex /img/ faire un routage specifique, avec une interface dediée, ça me semble cool, now what about pdf files ?\n\n\npuis\n\nil va falloir que je retrouve mes reperes avec git, pour deploy la nouvelle version, de façon intelligente et sans rien risquer, faire un procedure, ne pas se precipiter\n\nsuite le [31/10](31-10-20)\n\n\n\n\n","html":"<h2 id=\"-dev-j\"><a href=\"/\">/</a> <a href=\"/dev/\">dev/</a> <a href=\"/dev/J/\">J/</a></h2>\n<h1 id=\"231020\">23/10/20</h1>\n<p><a href=\"06-09-20\">précédent</a> / <a href=\"31-10-20\">suivant</a></p>\n<p>rebosser, <br>il faut que je rebosse, adele me l'a dit doucement au coin de l'oreille et elle a raison</p>\n<p>il faut que j'aboutisse à une nouvelle version stable, avec :</p>\n<ul>\n<li>file-upload (pic + pdf)</li>\n<li>integration youtube</li>\n<li>liens qui ne depassent pas de l'écran sur mobile</li>\n<li>un système pour être au courant de la version (ex un fichier txt dans public)</li>\n</ul>\n<hr>\n<p>ces derniers mois j'ai bossé plusieurs fois sur la version dev, sans toujours prendre note des experimentations, alors je vais commencer par faire un état des lieux...</p>\n<ol>\n<li>dans la version dev, j'ai enlevé dompurify, ça permet de mettre des videos youtube, des iframes<blockquote>\n<p>this.html = marked(this.markdown); </p>\n</blockquote>\n</li>\n<li>j'ai commencé à bosser sur le file-upload (rajout d'un form sur le front, rien dans le back, (à re-veifier)) <a href=\"https://arthur.cahut.net/dev/file-upload\">https://arthur.cahut.net/dev/file-upload</a></li>\n</ol>\n<p>c'est tout a priori</p>\n<p>je vais garder la non-purification du dom</p>\n<p>et finir le file upload (utiliser simplement <a href=\"https://www.npmjs.com/package/express-fileupload\">https://www.npmjs.com/package/express-fileupload</a>)<br></p>\n<p>reflexion... comment supprimer une image mise en ligne???\n<br> idée : pour le moment osef?, risque : mettre une image par erreur à une url qui n'était pas censé en heberger une<br>\npiste : heberger toutes les images dans un seul dossier, ex /img/ faire un routage specifique, avec une interface dediée, ça me semble cool, now what about pdf files ?</p>\n<p>puis</p>\n<p>il va falloir que je retrouve mes reperes avec git, pour deploy la nouvelle version, de façon intelligente et sans rien risquer, faire un procedure, ne pas se precipiter</p>\n<p>suite le <a href=\"31-10-20\">31/10</a></p>\n","nothing":1}
