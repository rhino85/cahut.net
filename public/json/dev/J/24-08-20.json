{"url":"/dev/J/24-08-20","markdown":"## [/](/) [dev/](/dev/) [J/](/dev/J/)\n# 24/08/20\n[précédent](19-08-20) / [suivant](25-08-20)\n\nyop\n\nc'est un lundi aujourd'hui, je vais m'acharner à travailler, mon opération est jeudi matin\n\nje crois qu'il faudrait que je fasse une nouvelle branche de dev\n\nbon, là je me rend compte que mon système pour passer du js d'ejs à vue c'est très moymoy, mais en vrai je sais pas trop comment faire...\n\nbon, je crois que je viens de trouver la solution, il faut absolument que je fetch async le contenu de chaque page, via api\n\nmaintenant, une question, une reflexion que je dois avoir au vu de l'évolution du projet :\n\nle contenu, \"l'input\" de l'user n'est plus forcement representable que par du markdown, il peut etre egalement composé d'HTML, de CSS voir de JS (à l'heure actuelle : impossible car le fait d'inclure un tag script casse la page, d'où necessité de fetch le content de façon plus propre qu'à l'heure actuelle)\n\nactuellement le contenu de chaque page c'est toujours juste un objet JSON qui contient : le texte du markdown et l'innerHTML de #content\n\nau vu de l'évolution du projet qui tourne vers un \"editeur web online\" (voir reflexion du [11-08-20](11-08-20)) j'aimerai faire un test de laisser la possibilité de modifier tout l'html de la page dans la zone d'edition, genre, y compris le header, vraiment tout... <br>sauf le code vue???????????????\n\nil faudrait que ça soit comme un mode \"expert\" optionnel qui puisse etre assez techniquement radical pour permettre de faire de n'importe quelle url qui est originellement servie comme un document html, un fichier css incluable dans un autre document ou tout autre\n\n\n\ngc,hcjhg;jhgj;gfhhg\n\n<style>\n#content {\n}\n\na {\nbackground-color : blue;\n}\n\nH1 {\ncolor : blue;\n}\n\n\n\n</style>\n\n\n\n","html":"<h2 id=\"-dev-j\"><a href=\"/\">/</a> <a href=\"/dev/\">dev/</a> <a href=\"/dev/J/\">J/</a></h2>\n<h1 id=\"240820\">24/08/20</h1>\n<p><a href=\"19-08-20\">précédent</a> / <a href=\"25-08-20\">suivant</a></p>\n<p>yop</p>\n<p>c'est un lundi aujourd'hui, je vais m'acharner à travailler, mon opération est jeudi matin</p>\n<p>je crois qu'il faudrait que je fasse une nouvelle branche de dev</p>\n<p>bon, là je me rend compte que mon système pour passer du js d'ejs à vue c'est très moymoy, mais en vrai je sais pas trop comment faire...</p>\n<p>bon, je crois que je viens de trouver la solution, il faut absolument que je fetch async le contenu de chaque page, via api</p>\n<p>maintenant, une question, une reflexion que je dois avoir au vu de l'évolution du projet :</p>\n<p>le contenu, \"l'input\" de l'user n'est plus forcement representable que par du markdown, il peut etre egalement composé d'HTML, de CSS voir de JS (à l'heure actuelle : impossible car le fait d'inclure un tag script casse la page, d'où necessité de fetch le content de façon plus propre qu'à l'heure actuelle)</p>\n<p>actuellement le contenu de chaque page c'est toujours juste un objet JSON qui contient : le texte du markdown et l'innerHTML de #content</p>\n<p>au vu de l'évolution du projet qui tourne vers un \"editeur web online\" (voir reflexion du <a href=\"11-08-20\">11-08-20</a>) j'aimerai faire un test de laisser la possibilité de modifier tout l'html de la page dans la zone d'edition, genre, y compris le header, vraiment tout... <br>sauf le code vue???????????????</p>\n<p>il faudrait que ça soit comme un mode \"expert\" optionnel qui puisse etre assez techniquement radical pour permettre de faire de n'importe quelle url qui est originellement servie comme un document html, un fichier css incluable dans un autre document ou tout autre</p>\n<p>gc,hcjhg;jhgj;gfhhg</p>\n<style>\n#content {\n}\n\na {\nbackground-color : blue;\n}\n\nH1 {\ncolor : blue;\n}\n\n\n\n</style>\n\n\n\n","nothing":1}
